@page
@model mcp_service_account_auth_example.Pages.IndexModel
@{
    ViewData["Title"] = "MCP Service Account Auth for VS Code Developers";
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            max-width: 900px;
            margin: 0 auto;
            padding: 20px;
            background-color: #f8f9fa;
        }
        .container {
            background-color: white;
            padding: 30px;
            border-radius: 12px;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        }
        h1 {
            color: #2d3748;
            text-align: center;
            margin-bottom: 10px;
            font-size: 2.2em;
        }
        .subtitle {
            text-align: center;
            color: #718096;
            margin-bottom: 30px;
            font-size: 1.1em;
        }
        .security-banner {
            background: linear-gradient(135deg, #e53e3e, #c53030);
            color: white;
            padding: 15px;
            border-radius: 8px;
            margin-bottom: 25px;
            text-align: center;
            font-weight: bold;
        }
        .form-group {
            margin-bottom: 20px;
        }
        label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: #4a5568;
        }
        input[type="text"], input[type="password"] {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
            font-size: 14px;
        }
        .submit-btn {
            background-color: #007bff;
            color: white;
            padding: 12px 30px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 16px;
            width: 100%;
        }
        .submit-btn:hover {
            background-color: #0056b3;
        }
        .result-section {
            margin-top: 30px;
            padding: 20px;
            border-radius: 4px;
        }
        .success {
            background-color: #d4edda;
            border: 1px solid #c3e6cb;
            color: #155724;
        }
        .error {
            background-color: #f8d7da;
            border: 1px solid #f5c6cb;
            color: #721c24;
        }
        textarea {
            width: 100%;
            height: 200px;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-family: monospace;
            font-size: 12px;
            resize: vertical;
            box-sizing: border-box;
        }
        .token-info {
            margin-top: 15px;
            font-size: 14px;
        }
        .client-examples {
            margin-top: 30px;
            padding: 20px;
            background-color: #e9ecef;
            border-radius: 4px;
        }
        .client-examples h3 {
            margin-top: 0;
            color: #495057;
        }
        .client-example {
            margin-bottom: 15px;
            padding: 10px;
            background-color: white;
            border-radius: 4px;
            border-left: 4px solid #007bff;
        }
        .client-id {
            font-family: monospace;
            font-weight: bold;
            color: #007bff;
        }
        .client-secret {
            font-family: monospace;
            color: #6c757d;
        }
        .scopes {
            font-style: italic;
            color: #28a745;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>üîê MCP Service Account Auth</h1>
        <div class="subtitle">Stop putting personal tokens in your VS Code settings!</div>
        
        <div class="security-banner">
            ‚ö†Ô∏è This demo shows how to configure MCP servers in VS Code WITHOUT personal credentials ‚ö†Ô∏è
        </div>
        
        <p style="text-align: center; color: #666; margin-bottom: 30px;">
            <strong>For developers manually configuring MCP servers in Visual Studio Code</strong><br>
            Secure GitHub Copilot context ‚Ä¢ No personal tokens ‚Ä¢ Dynamic authentication
        </p>
        
        <form method="post">
            <div class="form-group">
                <label for="ClientId">Client ID:</label>
                <input type="text" id="ClientId" name="ClientId" value="@Model.ClientId" required />
            </div>
            
            <div class="form-group">
                <label for="ClientSecret">Client Secret:</label>
                <input type="password" id="ClientSecret" name="ClientSecret" value="@Model.ClientSecret" required />
            </div>
            
            <button type="submit" class="submit-btn">Get Token</button>
        </form>

        @if (!string.IsNullOrEmpty(Model.ResultMessage))
        {
            if (Model.IsSuccess)
            {
                <div class="result-section success">
                    <h3>‚úÖ Authentication Successful</h3>
                    <p>@Model.ResultMessage</p>
                    
                    <label for="jwt-token">Generated JWT Token:</label>
                    <textarea id="jwt-token" readonly>@Model.GeneratedToken</textarea>
                    
                    <div class="token-info">
                        <strong>Token Information:</strong><br />
                        ‚Ä¢ Issuer: https://dev-12345.okta.com/oauth2/default<br />
                        ‚Ä¢ Subject: @Model.ClientId<br />
                        ‚Ä¢ Audience: api://mcp-server<br />
                        ‚Ä¢ Scopes: @string.Join(", ", Model.TokenScopes ?? Array.Empty<string>())<br />
                        ‚Ä¢ Expires: @Model.TokenExpiration?.ToString("yyyy-MM-dd HH:mm:ss UTC")
                    </div>
                </div>
            }
            else
            {
                <div class="result-section error">
                    <h3>‚ùå Authentication Failed</h3>
                    <p>@Model.ResultMessage</p>
                </div>
            }
        }

        <div class="client-examples">
            <h3>ÔøΩ VS Code MCP Server Examples</h3>
            <p><strong>Use these service accounts in your VS Code settings instead of personal tokens:</strong></p>
            
            <div class="client-example">
                <strong>üêô GitHub Context Server</strong> (for GitHub Copilot)<br />
                Client ID: <span class="client-id">github-service-account</span><br />
                Client Secret: <span class="client-secret">service-secret-123</span><br />
                VS Code config: <span class="scopes">"GITHUB_TOKEN": "${mcp_service_token:github-service-account}"</span>
            </div>
            
            <div class="client-example">
                <strong>üóÑÔ∏è Database Context Server</strong> (for schema context)<br />
                Client ID: <span class="client-id">postgres-service-account</span><br />
                Client Secret: <span class="client-secret">db-service-secret-456</span><br />
                VS Code config: <span class="scopes">"DATABASE_URL": "${mcp_service_token:postgres-service-account}"</span>
            </div>
            
            <div class="client-example">
                <strong>‚òÅÔ∏è AWS Context Server</strong> (for cloud resources)<br />
                Client ID: <span class="client-id">aws-service-account-key</span><br />
                Client Secret: <span class="client-secret">aws-access-key-789</span><br />
                VS Code config: <span class="scopes">"AWS_ACCESS_KEY_ID": "${mcp_service_token:aws-service-account-key}"</span>
            </div>
            
            <div style="margin-top: 20px; padding: 15px; background-color: #e8f5e8; border-radius: 4px; border-left: 4px solid #28a745;">
                <strong>‚ú® Benefits for VS Code Developers:</strong><br />
                ‚Ä¢ ‚úÖ No personal GitHub tokens in settings.json<br />
                ‚Ä¢ ‚úÖ Safe to sync VS Code settings to cloud<br />
                ‚Ä¢ ‚úÖ Works with GitHub Copilot automatically<br />
                ‚Ä¢ ‚úÖ Fresh tokens every time MCP servers start<br />
                ‚Ä¢ Complete audit trail for AI context access<br />
                ‚Ä¢ Scope-based permissions for AI assistants
            </div>
        </div>
    </div>
</body>
</html>
